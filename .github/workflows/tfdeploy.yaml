name: "Terraform action"
on:
  push:
    branches:
      - main
  pull_request:

permissions:
  id-token: write # Required for AWS OIDC connection
  contents: read # Required for actions/checkout
  pull-requests: write # Required for GitHub bot to comment on PR

env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.TF_AWS_REGION }}
  TF_AWS_BUCKET_NAME: ${{ secrets.TF_AWS_BUCKET_NAME }}
  TF_AWS_BUCKET_KEY_NAME: ${{ secrets.TF_AWS_BUCKET_KEY_NAME }}
  TF_VERSION: '1.4.0'
  TFLINT_VERSION: '0.46.1'
  TFSEC_VERSION: '1.28.1'
  TF_INIT: 'terraform init'
  TF_LINT: 'tflint --init'
  TF_SEC: 'tfsec'
  TF_FMT: 'terraform fmt'
  TF_VALIDATE: 'terraform validate'
  TF_PLAN: 'terraform plan -var-file="terraform.tfvars"'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.TF_AWS_ROLE }}
          aws-region: ${{ secrets.TF_AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM
      - name: "Install TFLint"
        run: |
          curl -sLo tflint.zip https://github.com/terraform-linters/tflint/releases/download/v${{ env.TFLINT_VERSION }}/tflint_linux_amd64.zip
          unzip tflint.zip -d /usr/local/bin/
          tflint --version

      - name: "Install tfsec"
        run: |
          curl -sLo tfsec https://github.com/aquasecurity/tfsec/releases/download/v${{ env.TFSEC_VERSION }}/tfsec-linux-amd64
          chmod +x tfsec
          mv tfsec /usr/local/bin/
          tfsec --version

      - name: Run Terraform
        run: |
          cd terra-codes
          echo "List Out the files in Current directory: $(pwd)"
          ls -al
          echo "Sleep for 3 seconds..."
          sleep 3
          echo "terraform init in progress..."
          ${{ env. TF_INIT}}
          echo "terraform lint in progress..."
          ${{ env.TF_LINT }}
          echo "terraform static code analysis in progress..."
          ${{ env.TF_SEC }}
          echo "terraform format in progress..."
          ${{ env.TF_FMT }}
          echo "terraform validate in progress..."
          ${{ env.TF_VALIDATE}}
          echo "terraform plan in progress..."
          ${{ env.TF_PLAN}}
